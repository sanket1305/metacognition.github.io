{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.service.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/contactus/contactus.component.ts","webpack:///src/app/contactus/contactus.component.html","webpack:///src/app/document/document.component.ts","webpack:///src/app/document/document.component.html","webpack:///src/app/fab/fab.component.ts","webpack:///src/app/fab/fab.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/loginapp/loginapp.component.ts","webpack:///src/app/loginapp/loginapp.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/quiz/quiz.component.ts","webpack:///src/app/quiz/quiz.component.html","webpack:///src/app/registrationapp/_helpers/must-match.validator.ts","webpack:///src/app/registrationapp/registrationapp.component.ts","webpack:///src/app/registrationapp/registrationapp.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","routingcomponents","auth","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuardService","router","isLoggedIn","navigateByUrl","AuthenticationService","http","token","localStorage","setItem","getItem","getToken","payload","split","window","atob","JSON","parse","user","getUserDetails","exp","Date","now","base","post","request","pipe","data","saveToken","removeItem","message","get","name","ContactusComponent","formBuilder","submitted","credentials","phone","email","contactus","group","required","maxLength","minLength","invalid","subscribe","error","alert","onReset","console","reset","controls","onSubmit","DocumentComponent","drag","document","getElementById","innerHTML","log","pdfname","f","dragElement","elmnt","pos1","pos2","pos3","pos4","onmousedown","dragMouseDown","event","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft","updatePdfName","FabComponent","Btns","querySelector","add","remove","btn","querySelectorAll","classList","toggle","contains","display","forEach","i","setTimeout","toggleFab","HomeComponent","dialog","LoginappComponent","password","registerForm","login","err","MaterialComponents","MaterialModule","qConst","QuizComponent","ques","k","sques","no","q","Question","Question_Type","o1","ans","length","from_csv","replaceAll","pra","que_no","string","search","replace","join","str","str2","j","quiz","option","x","toString","push","qno","parseInt","num","s","t","String","fromCharCode","undefined","prevque","nextque","MustMatch","controlName","matchingControlName","formGroup","control","matchingControl","errors","mustMatch","value","setErrors","RegistrationappComponent","confirmPassword","validator","register","SidebarComponent","opened","onClose","onOpen","width","y","transform","arrowOpen","arrowClose","togglesidebar","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { DocumentComponent } from './document/document.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginappComponent } from './loginapp/loginapp.component';\nimport { RegistrationappComponent } from './registrationapp/registrationapp.component';\nimport { ContactusComponent } from './contactus/contactus.component'\nimport { SidebarComponent } from './sidebar/sidebar.component'\nimport { AuthGuardService } from './auth-guard.service';\nimport { QuizComponent} from './quiz/quiz.component';\n\nconst routes: Routes = [\n  {path: 'Home', component: HomeComponent},\n  {path: 'Login', component: LoginappComponent},\n  {path: 'Register', component: RegistrationappComponent},\n  {path: 'Quiz', component: QuizComponent},\n  {path: 'ContactUs', component: ContactusComponent},\n  {path: 'Sidebar', component:SidebarComponent},\n  {path: 'Document', component:DocumentComponent},\n  {path: '', redirectTo: '/Home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingcomponents = [HomeComponent, LoginappComponent, RegistrationappComponent, QuizComponent, SidebarComponent]\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'immutables';\n  constructor(public auth: AuthenticationService) {  }\n}\n","<mat-toolbar role=\"heading\" class=\"row\">\n  <ul>\n    <li><a routerLink=\"/Home\" routerlinkActive=\"active\">Home</a></li>\n    <!-- <li><a routerLink=\"/Quiz\">Quiz</a></li> -->\n    <li><a routerLink=\"/ContactUs\">Contact</a></li>\n    <li><a routerLink=\"/Document\">Document</a></li>\n    <li *ngIf=\"!auth.isLoggedIn()\"><a routerLink=\"/Register\">Register</a></li>\n    <li *ngIf=\"!auth.isLoggedIn()\"><a routerLink=\"/Login\">Login</a></li>\n    <li *ngIf=\"auth.isLoggedIn()\"><a routerLink=\"/Logout\" (click)=\"auth.logout()\">Logout</a></li>\n  </ul>\n  <ul>\n    <li *ngIf=\"!auth.isLoggedIn()\"><a class=\"profile-icon\" routerLink=\"/Login\"><span class=\"material-icons\">person</span></a></li>\n  </ul>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule, routingcomponents} from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { RegistrationappComponent } from './registrationapp/registrationapp.component'\nimport { LoginappComponent } from './loginapp/loginapp.component'\nimport { HomeComponent } from './home/home.component'\nimport { AuthenticationService } from './authentication.service'\nimport { AuthGuardService } from './auth-guard.service';\nimport { ContactusComponent } from './contactus/contactus.component';\nimport {SidebarModule} from 'ng-sidebar';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FabComponent } from './fab/fab.component';\nimport { DocumentComponent } from './document/document.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingcomponents,\n    QuizComponent,\n    RegistrationappComponent,\n    LoginappComponent,\n    HomeComponent,\n    ContactusComponent,\n    SidebarComponent,\n    FabComponent,\n    DocumentComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    SidebarModule.forRoot()\n  ],\n  providers: [AuthGuardService, AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthenticationService } from './authentication.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate{\n  constructor(private auth: AuthenticationService, private router: Router) {}\n  canActivate(){\n    if(!this.auth.isLoggedIn()){\n      this.router.navigateByUrl('/')\n      return false\n    }\n    return true\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router'\n\nexport interface UserDetails{\n  id: number\n  name: string\n  email: string\n  password: string\n  exp: number\n  lat: number\n}\n\ninterface TokenResponse {\n  token: string\n  error: string\n  \n}\n\ninterface EmailResponse {\n  message: string\n  error: string\n}\n\ninterface quizResponse{\n  quizes: JSON\n  error: string\n}\n\nexport interface TokenPayload{\n  id: number\n  name: string\n  email: string\n  password: string\n}\n\nexport interface EmailData{\n  phone: number\n  name: string\n  email: string\n  message: string\n}\n\nexport interface pdfData{\n  name: string\n}\n@Injectable()\nexport class AuthenticationService {\n  private token: string\n\n  constructor(private http: HttpClient, private router: Router) {  }\n\n  private saveToken (token: string): void{\n    localStorage.setItem(\"userToken\", token)\n    this.token = token\n  }\n\n  private getToken (): string{\n    if(!this.token){\n      this.token = localStorage.getItem(\"userToken\")\n    }\n    return this.token\n  }\n\n  public getUserDetails (): UserDetails{\n    const token = this.getToken()\n    let payload\n    if(token){\n      payload = token.split('.')[1]\n      payload = window.atob(payload)\n      return JSON.parse(payload)\n    }else{\n      return null\n    }\n  }\n\n    public isLoggedIn (): boolean {\n      const user = this.getUserDetails()\n      if(user){\n        return user.exp > Date.now() / 1000\n      }else{\n        return false\n      }\n    }\n\n    public register (user: TokenPayload): Observable<any> {\n      const base = this.http.post('/users/register', user)\n      \n      const request = base.pipe(\n        map((data: TokenResponse)=>{\n          if(data.token){\n            this.saveToken(data.token)\n          }\n          return data\n        })\n      )\n      return request\n    }\n\n    public login(user: TokenPayload): Observable<any> {\n      // console.log(\"AYA\")\n      const base = this.http.post('/users/login', user)\n      \n      const request = base.pipe(\n        map((data:TokenResponse) => {\n          if(data.token){\n            this.saveToken(data.token)\n          }\n          return data\n        })\n      )\n\n      return request\n    }\n\n    public logout(): void{  \n      this.token = ''\n      window.localStorage.removeItem(\"userToken\")\n      this.router.navigateByUrl('/')\n    }\n\n    public email(user: EmailData): Observable<any>{\n      // console.log(\"AYA\")\n      const base = this.http.post('/users/email', user)\n      \n      const request = base.pipe(\n        map((data:EmailResponse) => {\n          if(data.message){\n            return data\n          }\n          return data\n        })\n      )\n\n      return request\n    }\n\n    public quiz(): Observable<any>{\n      const base = this.http.get('/quiz/sample2')\n      \n      const request = base.pipe(\n        map((data: quizResponse)=>{\n          return data\n        })\n      )\n\n      return request\n    }\n\n    public pdfname(name: pdfData): Observable<any>{\n      const base = this.http.post('/pdf/pdfname',name)\n      const request = base.pipe(\n        map((data: EmailResponse)=>{\n          return data\n        })\n      )\n      return request\n    }\n}\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms'\nimport {\n  AuthenticationService,\n  EmailData\n} from '../authentication.service';\nimport {\n  Router\n} from '@angular/router'\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.scss']\n})\nexport class ContactusComponent implements OnInit {\n  contactus: FormGroup;\n  submitted = false;\n  credentials: EmailData = {\n    phone: 0,\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  }\n  constructor(private formBuilder: FormBuilder, private auth: AuthenticationService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.contactus = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(3)]],\n      phone: ['', [Validators.minLength(10), Validators.maxLength(10)]],\n      message: ['', [Validators.minLength(5), Validators.maxLength(500), Validators.required]]\n    });\n  }\n\n  get f() {\n    return this.contactus.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.contactus.invalid) {\n      return;\n    }\n    this.auth.email(this.credentials).subscribe(\n      (data) => {\n        if (data.error) {\n          alert(data.error)\n        } else {\n          alert(data.message)\n          this.onReset()\n        }\n\n      },\n      error => {\n        console.error(error)\n      }\n    )\n  }\n\n  onReset() {\n    this.submitted = false;\n    this.contactus.reset();\n  }\n}\n","<div class=\"container\">\n    <div class=\"para\">\n      <p>Drop a Line</p> \n      <div class=\"row\">\n        <div><mat-icon> chat_bubble_outline</mat-icon></div>\n        <p>Dont't hesitate to contact us</p>\n      </div>\n      <p>Ready for offers and cooperation</p>        \n    </div>\n    <!-- <div class=\"mat-headline\" style=\"margin-top: 2%; margin-bottom: 0%;\">\n      Phone: (91)12234 56478\n    </div>\n  \n    <div class=\"mat-headline\">\n      <p>Email: Iwanttorock@gmail.com</p>\n    </div> -->\n    \n    \n    <form  [formGroup]=\"contactus\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"first-input-fields\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Name</mat-label>\n          <input id=\"name\" matInput placeholder=\"Name\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': submitted }\" [(ngModel)]=\"credentials.name\">\n          <mat-icon matSuffix style=\"color: #0079D7;\">person</mat-icon>\n        </mat-form-field> \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Phone</mat-label>\n          <input matInput type=\"tel\" formControlName=\"phone\" placeholder=\"Phone\" value=\" \" [(ngModel)]=\"credentials.phone\">\n          <mat-icon matSuffix style=\"color: #0079D7;\">phone</mat-icon>\n        </mat-form-field>\n      </div>\n\n      <mat-form-field appearance=\"outline\" class=\"input-fields\">\n          <mat-label>Email</mat-label>\n          <input id=\"email\" matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [(ngModel)]=\"credentials.email\">\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.email.errors.required\" style=\"color: red;\">Email is required</mat-hint>\n              <mat-hint *ngIf=\"f.email.errors.email\" style=\"color: red;\">Email must be a valid email address</mat-hint>\n        </div>\n        <mat-icon matSuffix style=\"color: #0079D7;\">email</mat-icon>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"input-fields\">\n          <mat-label>Message</mat-label>\n          <textarea matInput formControlName=\"message\" [ngClass]=\"{ 'is-invalid': submitted && f.message.errors }\" [(ngModel)]=\"credentials.message\"></textarea>\n          <div *ngIf=\"submitted && f.message.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.message.errors.required\" style=\"color: red;\">Type message you want to give us</mat-hint>\n          </div>\n          <mat-icon matSuffix style=\"color: #0079D7;\">message</mat-icon>\n      </mat-form-field>\n      \n        <div>\n          <button mat-raised-button type=\"submit\">Send Message</button>\n        </div>\n    </form>\n\n  <div class=\"contact-info\">\n    <p>How to Find Us?</p>\n    <p>If you have any questions, just fill in the contact form, and we will answer you shortly. If you live in mumbai, you can visit to our headquarter DBIT, Kurla west.</p>\n    <p> Telephone: 01234-56789</p>\n    <p> Email: wewillrock@gmail.com</p>\n  </div>\n\n</div>\n<app-sidebar></app-sidebar>\n<app-fab></app-fab>","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  AuthenticationService,\n  pdfData\n} from '../authentication.service';\nimport {\n  Router\n} from '@angular/router'\n\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent implements OnInit {\n\n\n  credentials: pdfData = {\n    name: \"\"\n  }\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  ngOnInit() {\n    this.drag()\n  }\n\n  updatePdfName(id) {\n    this.credentials.name = document.getElementById(id).innerHTML;\n    console.log(this.credentials.name);\n    this.auth.pdfname(this.credentials).subscribe(\n      (data) => {\n        var f = document.getElementById('Frame')\n        f['src'] = f['src']\n      },\n      error => {\n        alert(\"problem\")\n      })\n  }\n\n  updatePdfName2() {\n    this.credentials.name = document.getElementById(\"2\").innerHTML;\n    console.log(this.credentials.name);\n  }\n\n  //#######################################Video#####################################\n\n  //\ndrag(){\n  dragElement(document.getElementById(\"mydiv\"));\nfunction dragElement(elmnt) {\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  if (document.getElementById(elmnt.id + \"header\")) {\n    // if present, the header is where you move the DIV from:\n    document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\n  } else {\n    // otherwise, move the DIV from anywhere inside the DIV:\n    elmnt.onmousedown = dragMouseDown;\n  }\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onmousemove = elementDrag;\n  }\n\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    document.onmouseup = null;\n    document.onmousemove = null;\n  }\n}\n}\n  \n}\n","<div>\n  <label id=\"1\" (click)=\"updatePdfName(1)\">1.pdf</label><br>\n  <label id=\"2\" (click)=\"updatePdfName(2)\">compressed.tracemonkey-pldi-09.pdf</label>\n</div>\n\n\n  <!-- <iframe id=\"Frame\" src=\"http://localhost:8085/htmldigilocker\" draggable=\"true\" title=\"description\"\n    style=\"width: 60%;position: absolute; height: 100%; border: none;margin-left: 20%;\">\n -->\n\n<div id=\"mydiv\">\n  <!-- Include a header DIV with the same name as the draggable DIV, followed by \"header\" -->\n  <div id=\"mydivheader\">Click here to move</div>\n  <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/tgbNymZ7vqY\">\n  </iframe>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fab',\n  templateUrl: './fab.component.html',\n  styleUrls: ['./fab.component.scss']\n})\nexport class FabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleFab(){\n    const Btns = document.querySelector(\".btns\");\n    const add = document.getElementById(\"add\");\n    const remove = document.getElementById(\"remove\");\n    const btn = document.querySelector(\".btns\").querySelectorAll(\"a\");\n    Btns.classList.toggle(\"open\");\n    if (Btns.classList.contains(\"open\")) {\n      remove.style.display = \"block\";\n      add.style.display = \"none\";\n      btn.forEach((e, i) => {\n        setTimeout(() => {\n          var top = 50 * i;\n          e.style.top = top + \"px\";\n          console.log(e);\n        }, 100 * i);\n      });\n    } else {\n      add.style.display = \"block\";\n      remove.style.display = \"none\";\n      btn.forEach((e, i) => {\n        e.style.top = \"0px\";\n      });\n    }\n  }\n\n}\n","<div class=\"fab\" (click)=\"toggleFab()\">\n    <div class=\"action\">\n        <!-- <span class=\"material-icons\">add</span> -->\n        <span class=\"material-icons\" id=\"add\">more_vert</span>\n        <span class=\"material-icons\" id=\"remove\" style=\"display: none;\">close</span>\n    </div>\n    <div class=\"btns\">\n        <a class=\"btn\" routerLink=\"/Quiz\" matTooltip=\"Let's Study\"\n        [matTooltipPosition]=\"'left'\">\n            <span class=\"material-icons\">menu_book</span>\n        </a>\n        <a class=\"btn\" routerLink=\"/Quiz\"  matTooltip=\"Let's Quiz\"\n        [matTooltipPosition]=\"'left'\">\n            <span class=\"material-icons\">question_answer</span>\n        </a>\n        <a class=\"btn\" routerLink=\"/ContactUs\"  matTooltip=\"QNA\"\n        [matTooltipPosition]=\"'left'\">\n            <span class=\"material-icons\">help_outline</span>\n\n        </a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  \n  }\n\n  openDialog(){\n    \n  }\n}\n","<!-- <div class=\"container\">\n\n    <p style=\"text-align: center;\" class=\"heading\">OOP</p>\n    <p style=\"text-align: center;\" class=\"para-one\">OOP stands for Object-Oriented Programming</p>\n        \n    <div class=\"paras-container\">\n        <p class=\"paras\">\n            Procedural programming is about writing procedures or methods that perform operations on the data, while object-oriented programming is about creating objects that contain both data and methods.Object-oriented programming has several advantages over procedural programming:\n           \n        </p>    \n        <img src=\"..//..//assets/oop.jpg\" alt=\"referece diagram for oops\">\n    </div>\n    <p class=\"paras\">\n        OOP is faster and easier to execute. <br>\n        OOP provides a clear structure for the programs. <br>\n\n        OOP helps to keep the Java code DRY \"Don't Repeat Yourself\", and makes the code easier to maintain, modify and debug.<br>\n        OOP makes it possible to create full reusable applications with less code and shorter development time<br>\n    </p>\n    <p class=\"closing-para\">\n        Note: The \"Don't Repeat Yourself\" (DRY) principle is about reducing the repetition of code. You should extract out the codes that are common for the application, and place them at a single place and reuse them instead of repeating it\n    </p>\n\n</div> -->\n<main>\n    <div class=\"box1 box\">\n        <div class=\"card-big\">\n            <h1>MetaCognition</h1>\n            <button>Know More</button>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam voluptatum cupiditate molestias? Amet explicabo temporibus error adipisci laborum atque nemo.\n            </p>\n            <div class=\"social-icons\">\n                <a href=\"\"></a>\n                <a href=\"\"></a>\n                <a href=\"\"></a>\n                <a href=\"\"></a>\n            </div>\n        </div>\n    </div>\n    <div class=\"box2 box\">\n        <div class=\"card\">\n            <span class=\"material-icons\">account_box</span>\n            <h2>Profile</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam molestias ea pariatur rem ipsam id?</p>\n        </div>\n        \n    </div>\n    <div class=\"box3 box\">\n        <div class=\"card\">\n            <span class=\"material-icons\">login</span>\n            <h2>Login</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam molestias ea pariatur rem ipsam id?</p>\n        </div>\n\n    </div>\n    <div class=\"box4 box\">\n        <div class=\"card\">\n            <span class=\"material-icons\">equalizer</span>\n            <h2>Report</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam molestias ea pariatur rem ipsam id?</p>\n        </div>\n\n    </div>\n    <div class=\"box5 box\">\n        <div class=\"card\">\n            <span class=\"material-icons\">question_answer</span>\n            <h2>Quiz</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam molestias ea pariatur rem ipsam id?</p>\n        </div>\n\n    </div>\n</main>\n<!-- <app-fab></app-fab>\n<app-sidebar></app-sidebar> -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService, TokenPayload } from '../authentication.service'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-loginapp',\n  templateUrl: './loginapp.component.html',\n  styleUrls: ['./loginapp.component.scss']\n})\nexport class LoginappComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  credentials: TokenPayload = {\n    id: 0,\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\n  constructor(private formBuilder: FormBuilder,private auth: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n    \n      // stop here if form is invalid\n      if (this.registerForm.invalid) {\n          return;\n      }\n      this.auth.login(this.credentials).subscribe(\n        (data)=>{\n            if(data.token){\n              this.router.navigateByUrl('/Home')\n            }else{\n              alert(data.error)\n            }\n          },\n        err=>{\n            console.error(err)\n        }\n    )\n      // display form values on success\n      \n  }\n\n  onReset() {\n      this.submitted = false;\n      this.registerForm.reset();\n  }\n}\n","<div>\n  <mat-card>\n    <mat-card-title>\n      <div class=\"mat-display-2 text-primary\" >\n        Login\n      </div>\n    </mat-card-title>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" style=\"text-align: center;\">\n      <mat-card-content>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput placeholder=\"Email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [(ngModel)]=\"credentials.email\">\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.email.errors.required\">Email is required</mat-hint>\n              <mat-hint *ngIf=\"f.email.errors.email\">Email must be a valid email address</mat-hint>\n          </div>\n          </mat-form-field>\n        </div>\n          <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.password.errors.required\">Password is required</mat-hint>\n              <mat-hint *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</mat-hint>\n          </div>\n          </mat-form-field>\n        </div>\n        <div style=\"text-align: center;margin-bottom: 10%;margin-top: 5%;\">\n          <mat-card-actions>\n            <button mat-raised-button type=\"submit\" class=\"button\">\n              <p class=\"mat-title\" style=\"margin-bottom: 0;\">Login</p>\n            </button>\n          </mat-card-actions>\n        </div>\n      </mat-card-content>\n    </form>\n  \n  </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar'\nimport {MatCardModule} from '@angular/material/card'; \nimport {MatFormFieldModule} from '@angular/material/form-field';  \nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio'\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nconst MaterialComponents = [\n  MatButtonModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatRadioModule,\n  MatTooltipModule,\n  MatDialogModule\n]\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {QuestionFormat} from '../shared/quetions';\n\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router'\n\nconst qConst : QuestionFormat[] = []\n//   {\n//     id: '0',\n//     qNo: '1',\n//     q: 'Which of the following statements should be used to obtain a remainder after dividing 3.14 by 2.1 ?',\n//     o1: 'rem = 3.14 % 2.1;',\n//     o2: 'rem = modf(3.14, 2.1);',\n//     o3: 'rem = fmod(3.14, 2.1);',\n//     o4: 'Remainder cannot be obtain in floating point division',\n//   },\n//   {\n//     id: '1',\n//     qNo: '2',\n//     q: 'class Test { \\n int i;\\n } \\n class Main { \\n public static void main(String args[]) { \\n Test t; \\n     System.out.println(t.i); \\n}' ,\n//     o1: 'example00',\n//     o2: 'example01',\n//     o3: 'example02',\n//     o4: 'example03',\n//   },\n//   {\n//     id: '2',\n//     qNo: '3',\n//     q: 'what is anvcbcvxbvccd',\n//     o1: 'example000',\n//     o2: 'example001',\n//     o3: 'example002',\n//     o4: 'example003',\n//   },\n//   {\n//     id: '3',\n//     qNo: '4',\n//     q: 'what is gfhfghfgh',\n//     o1: 'example0000',\n//     o2: 'example0001',\n//     o3: 'example0002',\n//     o4: 'example0003',\n//   }\n// ];\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss']\n})\nexport class QuizComponent implements OnInit {\n\n  pra: any;\n  que_no: any;\n  ques = qConst;\n  k = 0;\n  sques = {\n    no: 0,\n    q: \"\",\n    Question: \"\",\n    Question_Type: \"\",\n    o1: [\"\",\"\",\"\",\"\"]\n  };\n\n  ans = []\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n    if(this.ques.length==0){\n      this.from_csv()\n    }else{\n      this.sques = qConst[this.k];\n            \n      //console.log(this.sques.Question)\n      this.sques.Question = this.replaceAll(this.sques.Question,\"\\n\",\"<br>&nbsp;&nbsp;\")\n      this.pra = this.sques.Question\n      this.que_no = this.sques.no\n    }\n    \n  }\n\n  replaceAll(string, search, replace) {\n    string = string.split(search).join(replace);\n    var k=0;\n    var str = \"\"\n    var str2 = \"\"\n    var i = 0\n    while(i<string.length){\n      if(string[i]==\"{\"){\n        k+=3\n      }else if(string[i]==\"}\"){\n        k-=3;\n      }\n      if(string[i]==\"<\" && string[i+1]==\"b\" && string[i+2]==\"r\"){\n        str+=\"<br>\"\n        i+=4\n        for(var j=0;j<k;j++){\n          str+=\"&nbsp;\"\n        }\n        continue\n      }else if(string[i]==\" \"){\n        str+=\"&nbsp;\"\n      }else{\n        str+=string[i]\n      }\n      i+=1\n    }\n    //console.log(str2)\n    return str;\n  }\n\n  from_csv(){\n    \n    this.auth.quiz().subscribe(\n      (data)=>{\n          if(data.error){\n              alert(data.error)\n          }else{\n            var j = 1;\n            for(var i=0;i<21;i++){\n              var option = data[i][\"Options\"].split(',')\n              var x = {\n                no: (i+1),\n                q:j.toString(),\n                Question: data[i][\"Question\"],\n                Question_Type: data[i][\"Question Type\"],\n                o1: option\n              }\n              qConst.push(x);\n              j++;\n            }\n            this.sques = qConst[this.k];\n            \n            //console.log(this.sques.Question)\n            this.sques.Question = this.replaceAll(this.sques.Question,\"\\n\",\"<br> &nbsp;&nbsp;&nbsp;\")\n            this.pra = this.sques.Question\n            this.que_no = this.sques.no\n            //alert(this.sques.Question)\n            \n          }\n      },\n      error=>{\n          \n          console.error(error)\n      }\n    )\n  }\n  select(qno){\n    // if(qno === 0)\n    // {\n    //   document.getElementById(\"back_button\").style.display=\"none\";\n    //   this.sques = qConst[qno];\n    // }\n    // else{\n    //   document.getElementById(\"back_button\").style.display=\"\";\n    //   this.sques = qConst[qno];\n    // }\n    this.sques = qConst[parseInt(qno)]\n    this.pra = this.sques.Question\n    this.k = parseInt(qno)\n    this.que_no = parseInt(qno)+1\n  }\n\n  nextque(){\n    if(this.k+1<this.ques.length){\n      this.k++;\n      this.sques = qConst[this.k];\n      this.pra = this.sques.Question\n      this.que_no=this.sques.no\n    }\n    //console.log(this.sques.Question)\n  }\n\n  prevque(){\n    if(this.k-1>=0){\n      this.k--;\n      this.sques = qConst[this.k];\n      this.pra = this.sques.Question\n      this.que_no=this.sques.no\n    }\n    \n  }\n\n  numToSSColumn(num){\n    var s = ''\n    var t = 0;\n  \n    while (num > 0) {\n      t = (num - 1) % 26;\n      s = String.fromCharCode(65 + t) + s;\n      num = (num - t)/26 | 0;\n    }\n    return s || undefined;\n  }\n  \n}\n","<div class=\"outer_container\">\n  <div class=\"left_panel\">\n    <div class=\"question_no_links\">\n      <button *ngFor=\"let option of ques; let count = index;\" id=\"question_no_link{{count+1}}\" (click)=\"select(count)\" class=\"question_no_button\" style=\"display: inline-block;\">{{count+1}}</button>\n      <!-- <button id=\"question_no_link2\" (click)=\"select(1)\" class=\"question_no_button\">2</button>\n      <button id=\"question_no_link3\" (click)=\"select(2)\" class=\"question_no_button\">3</button>\n      <button id=\"question_no_link4\" (click)=\"select(3)\" class=\"question_no_button\">4</button>\n      <button id=\"question_no_link5\" class=\"question_no_button\">5</button>\n      <button id=\"question_no_link6\" class=\"question_no_button\">6</button>\n      <button id=\"question_no_link7\" class=\"question_no_button\">7</button>\n      <button id=\"question_no_link8\" class=\"question_no_button\">8</button>\n      <button id=\"question_no_link9\" class=\"question_no_button\">9</button>\n      <button id=\"question_no_link10\" class=\"question_no_button\">10</button>\n      <button id=\"question_no_link11\" class=\"question_no_button\">11</button>\n      <button id=\"question_no_link12\" class=\"question_no_button\">12</button>\n      <button id=\"question_no_link13\" class=\"question_no_button\">13</button>\n      <button id=\"question_no_link14\" class=\"question_no_button\">14</button>\n      <button id=\"question_no_link15\" class=\"question_no_button\">15</button>\n      <button id=\"question_no_link16\" class=\"question_no_button\">16</button>\n      <button id=\"question_no_link17\" class=\"question_no_button\">17</button>\n      <button id=\"question_no_link18\" class=\"question_no_button\">18</button>\n      <button id=\"question_no_link19\" class=\"question_no_button\">19</button>\n      <button id=\"question_no_link20\" class=\"question_no_button\">20</button>\n      <button id=\"question_no_link21\" class=\"question_no_button\">21</button>\n      <button id=\"question_no_link22\" class=\"question_no_button\">22</button>\n      <button id=\"question_no_link23\" class=\"question_no_button\">23</button>\n      <button id=\"question_no_link24\" class=\"question_no_button\">24</button>\n      <button id=\"question_no_link25\" class=\"question_no_button\">25</button>\n      <button id=\"question_no_link26\" class=\"question_no_button\">26</button>\n      <button id=\"question_no_link27\" class=\"question_no_button\">27</button>\n      <button id=\"question_no_link28\" class=\"question_no_button\">28</button>\n      <button id=\"question_no_link29\" class=\"question_no_button\">29</button>\n      <button id=\"question_no_link30\" class=\"question_no_button\">30</button> -->\n\n    </div>\n  </div>\n\n  <div class=\"quiz_container\">\n    <br>\n    <h3 class=\"path\"> <span>Topic Name</span> > <span>Sub Topic Name</span> </h3>\n    <div class=\"question_container\">\n      <p id=\"question\">Q<span [innerHTML]=\"que_no\"> </span>] &nbsp;<span id=\"question_no\" [innerHTML]=\"pra\"> </span></p>\n      <div class=\"options\" *ngIf=\"sques.Question_Type === 'SCQ' || sques.Question_Type === 'T/F'\">\n        <div class=\"inputGroup\" id=\"1\" *ngFor=\"let option of sques.o1; let count = index;\">\n          <input value=\"1\" id=\"option{{count+1}}\" name=\"radio\" type=\"radio\" >\n          <label for=\"option{{count+1}}\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"42\" height=\"42\" viewBox=\"0 0 42 42\">\n              <g id=\"A_Container\" data-name=\"A Container\" transform=\"translate(-1102 -403)\">\n                <g id=\"BG_\" data-name=\"BG \" transform=\"translate(1102 403)\" fill=\"#f3f6fb\">\n                  <path\n                    d=\"M 21 41.5 C 18.2322998046875 41.5 15.54765033721924 40.95804977416992 13.0206298828125 39.88920974731445 C 10.57956027984619 38.85673141479492 8.387160301208496 37.3785285949707 6.504310131072998 35.49568939208984 C 4.621469974517822 33.61283874511719 3.143270015716553 31.42044067382813 2.110790014266968 28.9793701171875 C 1.041949987411499 26.45235061645508 0.5 23.7677001953125 0.5 21 C 0.5 18.2322998046875 1.041949987411499 15.54765033721924 2.110790014266968 13.0206298828125 C 3.143270015716553 10.57956027984619 4.621469974517822 8.387160301208496 6.504310131072998 6.504310131072998 C 8.387160301208496 4.621469974517822 10.57956027984619 3.143270015716553 13.0206298828125 2.110790014266968 C 15.54765033721924 1.041949987411499 18.2322998046875 0.5 21 0.5 C 23.7677001953125 0.5 26.45235061645508 1.041949987411499 28.9793701171875 2.110790014266968 C 31.42044067382813 3.143270015716553 33.61283874511719 4.621469974517822 35.49568939208984 6.504310131072998 C 37.3785285949707 8.387160301208496 38.85673141479492 10.57956027984619 39.88920974731445 13.0206298828125 C 40.95804977416992 15.54765033721924 41.5 18.2322998046875 41.5 21 C 41.5 23.7677001953125 40.95804977416992 26.45235061645508 39.88920974731445 28.9793701171875 C 38.85673141479492 31.42044067382813 37.3785285949707 33.61283874511719 35.49568939208984 35.49568939208984 C 33.61283874511719 37.3785285949707 31.42044067382813 38.85673141479492 28.9793701171875 39.88920974731445 C 26.45235061645508 40.95804977416992 23.7677001953125 41.5 21 41.5 Z\"\n                    stroke=\"none\" />\n                  <path\n                    d=\"M 21 1 C 18.29957962036133 1 15.68045997619629 1.528659820556641 13.21540069580078 2.5712890625 C 10.83394050598145 3.578559875488281 8.694950103759766 5.020778656005859 6.857860565185547 6.857860565185547 C 5.020778656005859 8.694950103759766 3.578559875488281 10.83394050598145 2.5712890625 13.21540069580078 C 1.528659820556641 15.68045997619629 1 18.29957962036133 1 21 C 1 23.70042037963867 1.528659820556641 26.31954002380371 2.5712890625 28.78459930419922 C 3.578559875488281 31.16606140136719 5.020778656005859 33.30504989624023 6.857860565185547 35.14213943481445 C 8.694950103759766 36.97922134399414 10.83394050598145 38.42144012451172 13.21540069580078 39.4287109375 C 15.68045997619629 40.47134017944336 18.29957962036133 41 21 41 C 23.70042037963867 41 26.31954002380371 40.47134017944336 28.78459930419922 39.4287109375 C 31.16606140136719 38.42144012451172 33.30504989624023 36.97922134399414 35.14213943481445 35.14213943481445 C 36.97922134399414 33.30504989624023 38.42144012451172 31.16606140136719 39.4287109375 28.78459930419922 C 40.47134017944336 26.31954002380371 41 23.70042037963867 41 21 C 41 18.29957962036133 40.47134017944336 15.68045997619629 39.4287109375 13.21540069580078 C 38.42144012451172 10.83394050598145 36.97922134399414 8.694950103759766 35.14213943481445 6.857860565185547 C 33.30504989624023 5.020778656005859 31.16606140136719 3.578559875488281 28.78459930419922 2.5712890625 C 26.31954002380371 1.528659820556641 23.70042037963867 1 21 1 M 21 0 C 32.59798049926758 0 42 9.402019500732422 42 21 C 42 32.59798049926758 32.59798049926758 42 21 42 C 9.402019500732422 42 0 32.59798049926758 0 21 C 0 9.402019500732422 9.402019500732422 0 21 0 Z\"\n                    stroke=\"none\" fill=\"#f3f6fb\" class=\"svg_circle\" />\n                </g>\n                <text class=\"svg_alpha\" id=\"Text_A\" data-name=\"Text A\" transform=\"translate(1115 409)\" font-size=\"22\"\n                  font-family=\"Montserrat-Regular, Montserrat\">\n                  <tspan x=\"0\" y=\"22\">{{numToSSColumn(count+1)}}</tspan>\n                </text>\n              </g>\n            </svg>\n            {{option}}</label>\n        </div>   \n      </div>\n\n      <div class=\"options\" *ngIf=\"sques.Question_Type === 'MCQ'\">\n        <div class=\"inputGroup\" id=\"1\" *ngFor=\"let option of sques.o1; let count = index;\">\n          <input value=\"1\" id=\"option{{count+1}}\" name=\"radio\" type=\"checkbox\" >\n          <label id=\"check\" for=\"option{{count+1}}\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\"><defs><style>.a{fill:none;}.b{font-size:22px;font-family:Montserrat-Regular, Montserrat;}.c,.d{stroke:none;}</style></defs>\n              <g transform=\"translate(-438 -325)\"><g class=\"a\" transform=\"translate(438 325)\">\n              <path class=\"c\" fill=\"#f3f6fb\" d=\"M10,0H34A10,10,0,0,1,44,10V34A10,10,0,0,1,34,44H10A10,10,0,0,1,0,34V10A10,10,0,0,1,10,0Z\"/>\n              <path class=\"d svg_circle\" fill=\"#f3f6fb\" d=\"M 10 1 C 5.037380218505859 1 1 5.037380218505859 1 10 L 1 34 C 1 38.96261978149414 5.037380218505859 43 10 43 L 34 43 C 38.96261978149414 43 43 38.96261978149414 43 34 L 43 10 C 43 5.037380218505859 38.96261978149414 1 34 1 L 10 1 M 10 0 L 34 0 C 39.52285003662109 0 44 4.477149963378906 44 10 L 44 34 C 44 39.52285003662109 39.52285003662109 44 34 44 L 10 44 C 4.477149963378906 44 0 39.52285003662109 0 34 L 0 10 C 0 4.477149963378906 4.477149963378906 0 10 0 Z\"/>\n              </g>\n              <text class=\"b svg_alpha\"  transform=\"translate(452 332)\">  <tspan x=\"0\" y=\"22\">{{numToSSColumn(count+1)}}</tspan></text></g></svg>\n            {{option}}</label>\n        </div>\n      </div>\n\n    </div>\n\n    <button id=\"back_button\" (click)=\"prevque()\"><img src=\"icon-left.svg\" alt=\"Back\"></button>\n    <button id=\"next_button\" (click)=\"nextque()\"><img src=\"icon-right.svg\" alt=\"Next\"></button>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- <div class=\"outer_container\">\n    <div class=\"side_panel\">\n        <div class=\"question_no_links\">\n            <button id=\"question_no_link1\" (click)=\"select(0)\" class=\"question_no_button\" active>1</button>\n            <button id=\"question_no_link2\" (click)=\"select(1)\" class=\"question_no_button\">2</button>\n            <button id=\"question_no_link3\" (click)=\"select(2)\" class=\"question_no_button\">3</button>\n            <button id=\"question_no_link4\" (click)=\"select(3)\" class=\"question_no_button\">4</button>\n            <button id=\"question_no_link5\" class=\"question_no_button\">5</button>\n            <button id=\"question_no_link6\" class=\"question_no_button\">6</button>\n            <button id=\"question_no_link7\" class=\"question_no_button\">7</button>\n            <button id=\"question_no_link8\" class=\"question_no_button\">8</button>\n            <button id=\"question_no_link9\" class=\"question_no_button\">9</button>\n            <button id=\"question_no_link10\" class=\"question_no_button\">10</button>\n        </div>\n    </div>\n\n    <div class=\"container\" *ngIf=\"sques\">\n        <h1>Topic Name</h1>\n        <p id=\"question\"><span id=\"question_no\">Q.{{sques.qNo}} </span>{{sques.q}}</p>\n            <div class=\"options\"> -->\n<!-- Code For Dynamic Options -->\n<!-- <mat-radio-group\n                    aria-labelledby=\"example-radio-group-label\"\n                    class=\"example-radio-group\"\n                    [(ngModel)]=\"favoriteSeason\">\n                    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\n                        {{season}}\n                    </mat-radio-button>\n                </mat-radio-group> -->\n<!-- <mat-radio-group>\n                <mat-radio-button value=\"1\" id=\"option1\">{{sques.o1}}</mat-radio-button><br><br> \n                <mat-radio-button value=\"2\" id=\"option2\">{{sques.o2}}</mat-radio-button><br><br> \n                <mat-radio-button value=\"3\" id=\"option3\">{{sques.o3}}</mat-radio-button><br><br> \n                <mat-radio-button value=\"4\" id=\"option4\">{{sques.o4}}</mat-radio-button><br><br> \n            </mat-radio-group>\n        </div>    \n\n        <button mat-raised-button id=\"back_button\" style=\"display: none;\">Back</button>\n        <button mat-raised-button id=\"next_button\" >Next</button>\n            \n    </div>\n</div> -->\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\n\nimport { MustMatch } from './_helpers/must-match.validator'\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-registrationapp',\n  templateUrl: './registrationapp.component.html',\n  styleUrls: ['./registrationapp.component.scss']\n})\nexport class RegistrationappComponent implements OnInit {\n    registerForm: FormGroup;\n    submitted = false;\n    credentials: TokenPayload = {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    constructor(private formBuilder: FormBuilder, private auth: AuthenticationService, private router: Router) { }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            name: ['',[Validators.required]],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(15)]],\n            confirmPassword: ['', Validators.required]\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n    }\n\n  // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n      // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n        this.auth.register(this.credentials).subscribe(\n            (data)=>{\n                if(data.error){\n                    alert(data.error)\n                }else{\n                    this.router.navigateByUrl('/Home')\n                }\n            },\n            error=>{\n                \n                console.error(error)\n            }\n        )\n\n      // display form values on success\n        //alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value, null, 4));\n    }\n\n    onReset() {\n        this.submitted = false;\n        this.registerForm.reset();\n    }\n}\n","<div>\n  <mat-card>\n    <mat-card-title>\n      <div class=\"mat-display-2\">\n        Registration\n      </div>\n    </mat-card-title>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" style=\"text-align: center;\">\n      <mat-card-content>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input matInput type=\"text\" formControlName=\"name\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted }\" placeholder=\"Name\" [(ngModel)]=\"credentials.name\" >\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput placeholder=\"Email\" formControlName=\"email\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [(ngModel)]=\"credentials.email\">\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.email.errors.required\">Email is required</mat-hint>\n              <mat-hint *ngIf=\"f.email.errors.email\">Email must be a valid email address</mat-hint>\n            </div>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.password.errors.required\">Password is required</mat-hint>\n              <mat-hint *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</mat-hint>\n            </div>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Confirm Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" placeholder=\"Password\">\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n              <mat-hint *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</mat-hint>\n              <mat-hint *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</mat-hint>\n            </div>\n          </mat-form-field>\n\n        </div>\n        <div style=\"text-align: center;margin-bottom: 10%;margin-top: 5%;\">\n          <mat-card-actions>\n            <button mat-raised-button type=\"submit\" class=\"button\">\n              <p class=\"mat-title\" style=\"margin-bottom: 0;\">Register</p>\n            </button>\n          </mat-card-actions>\n        </div>\n      </mat-card-content>\n    </form>\n\n\n    <div class=\"hint\">\n      <mat-hint>Already have account?<a href=\"/Login\"> Click here</a></mat-hint>\n    </div>\n    <div class=\"img\">\n      <div style=\"display: inline-block;margin-right: 5%;\">\n        <mat-card-actions>\n          <button mat-flat-button style=\"background-color: white;padding: 0; outline: none;\">\n            <img src=\"../../assets/google_PNG19635.png\" alt=\"\" role=\"button\" width=\"50\" height=\"50\">\n          </button>\n        </mat-card-actions>\n      </div>\n      <div style=\"display: inline-block;\">\n        <mat-card-actions>\n          <button mat-flat-button style=\"background-color: white;padding: 0;outline: none;\">\n            <img src=\"../../assets/facebook_logos_PNG19754.png\" alt=\"\" role=\"button\" width=\"50\" height=\"50\">\n          </button>\n        </mat-card-actions>\n      </div>\n    </div>\n  </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit { \n  constructor() { } \n  opened = false;\n  ngOnInit(): void {\n  }\n\n  togglesidebar(){\n    // this.opened = !this.opened;\n\n    if (this.opened) {\n      console.log(\"opened\");\n      this.onClose();\n    } else {\n      console.log(\"Closed\");\n      this.onOpen();\n    }\n  }  \n\n  onClose(){\n    this.opened = false;\n\n    setTimeout( () => { var x = document.getElementById(\"ngs\");\n    //x.style.transform = \"translateX(\" + (-300) + \"px) \";\n    x.style.width = \"35px\";\n    \n    //y.style.marginLeft = \"-25px\";\n\n    }, 250 );\n    var y = document.getElementById(\"open-sidebar\");\n    y.style.transform = \"translateX(\" + (0) + \"px) \";\n    \n    var arrowOpen = document.getElementById(\"arrow-Open\");\n    arrowOpen.style.display = \"\";\n    var arrowClose = document.getElementById(\"arrow-Close\");\n    arrowClose.style.display = \"none\";\n    \n  }\n\n  onOpen(){\n    this.opened = true;\n    var x = document.getElementById(\"ngs\");\n    //x.style.transform = \"translateX(\" + (300) + \"px) \";\n    x.style.width = \"100%\";\n\n    var y = document.getElementById(\"open-sidebar\");\n    y.style.transform = \"translateX(\" + (300) + \"px) \";\n    //y.style.marginLeft = \"275px\";\n    \n    var arrowOpen = document.getElementById(\"arrow-Open\");\n    arrowOpen.style.display = \"none\";\n    var arrowClose = document.getElementById(\"arrow-Close\");\n    arrowClose.style.display = \"\";\n\n  }\n\n}\n","<ng-sidebar-container id=\"ngs\">\n    <ng-sidebar [opened]=\"opened\" id=\"side\">\n      <!-- <button class=\"close-sidebar\" (click)=\"onClose()\"><span class=\"material-icons\">close</span></button> -->\n      <p>Topics</p>\n      <ul>\n        <li><a routerLink=\"/Quiz\">Quiz</a></li>\n        <li><a routerLink=\"/Quiz\">Classes and Objects</a></li>\n        <li><a routerLink=\"/Quiz\">Polymorphism</a></li>\n        <li><a routerLink=\"/Quiz\">Inheritance</a></li>\n        <li><a routerLink=\"/Quiz\">MultiThreading</a></li>\n      </ul>\n    </ng-sidebar>\n    <div ng-sidebar-content>\n      <button class=\"open-sidebar\" id=\"open-sidebar\"  (click)=\"togglesidebar()\"><span id=\"arrow-Close\" style=\"display: none;\" class=\"material-icons\">\n        keyboard_arrow_left\n        </span><span id=\"arrow-Open\" class=\"material-icons\">\n        keyboard_arrow_right</span></button>\n    </div>\n  </ng-sidebar-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}